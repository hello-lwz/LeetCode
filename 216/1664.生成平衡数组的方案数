#!/usr/local/bin/python3
# -*- coding:utf-8 -*-
"""
@author: 
@file: 1664.生成平衡数组的方案数
@time: 2020/11/23 09:27
@desc: 
"""
from typing import List

class Solution:
    def waysToMakeFair(self, nums: List[int]) -> int:
        ans = 0
        odd_sum = sum(nums[1::2])
        even_sum = sum(nums[::2]) - nums[0]
        if odd_sum == even_sum:
            ans += 1
        for i in range(1, len(nums)):
            if i & 1:
                even_sum += nums[i]
                even_sum -= nums[i-1]
            else:
                odd_sum += nums[i]
                odd_sum -= nums[i-1]
            if even_sum == odd_sum:
                ans += 1
        return ans

a = Solution().waysToMakeFair([1,2,3])
print(a)